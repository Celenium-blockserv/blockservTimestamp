{"version":3,"sources":["services/i18n.js","contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","assets/LogoWEB3.png","assets/en.png","assets/french.png","components/Main/Header.jsx","components/Main/Footer.jsx","components/Main/Encoder.jsx","assets/IconeKeyQR.png","components/Main/Consignation.jsx","components/Main/Consultation.jsx","components/Main/index.jsx","App.jsx","index.js"],"names":["i18next","use","initReactI18next","init","resources","en","translation","app_name","encodingMain","consignationMain","consultationMain","pricingButtonFooter","contactButtonFooter","dragNDropEncoder","warningEncoder","hashEncoder","copyEncoder","hashConsignation","ownerConsignation","inputTextConsignation","recordConsignation","alreadyConsignation","googleDriveUrlConsignation","generateGoogleDriveQRCodeConsignation","ownerConsultation","inputTextConsultation","listConsultation","dateTransactionConsultation","hashTransactionConsultation","blockNumberTransactionConsultation","qrcodeConsultation","qrcodeHideConsultation","hashConsultation","hashInputMsgConsultation","getOwnerConsultation","recordedByConsultation","contactUsFooter","fr","lng","interpolation","escapeValue","EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","address","networks","Contract","err","console","error","log","useEffect","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","Header","useTranslation","t","i18n","preventDoubleClic","Date","getTime","handleClick","event","changeLanguage","target","id","enFlag","alt","src","width","height","onClick","frenchFlag","Navbar","className","Brand","href","logo","Nav","language","variant","Footer","Button","Encoder","setUploadedFileHash","useState","selectedFile","setSelectedFile","computedHash","setComputedHash","parse","file","reader","FileReader","readAsArrayBuffer","Promise","resolve","reject","onload","result","loadFile","theSelectedFile","fileContent","crypto","subtle","digest","then","hash","hashHex","Array","from","Uint8Array","map","b","toString","padStart","join","Container","fluid","onDrop","selectedFiles","name","getRootProps","getInputProps","Row","Col","copyText","document","getElementById","navigator","clipboard","writeText","textContent","Consignation","fileHash","setOwnerInParent","recipient","setRecipient","hashOwner","setHashOwner","blockNumber","setBlockNumber","editableHash","setEditableHash","googleDriveUrl","setGoogleDriveUrl","setHashOwnerFromPolygon","methods","getOwnerAddress","call","setTimestamp","timestamp","send","response","imgSettings","inconeQR","xs","Form","Label","htmlFor","Control","onChange","Text","muted","disabled","Alert","size","bgColor","fgColor","level","includeMargin","qrCodeURL","toDataURL","replace","aEl","createElement","download","body","appendChild","click","removeChild","imageSettings","Consultation","owner","proofs","setProofs","showQRCode","setShowQRCode","editableOwner","setEditableOwner","setProofOfOwnershipList","length","getProofOfOwnership","downloadQRCode","Table","proof","toLocaleString","hidden","Main","setFileHash","setOwner","childData","Tabs","fill","defaultActiveKey","Tab","eventKey","title","App","ReactDOM","createRoot","render","StrictMode"],"mappings":"wqgJA+FAA,IACKC,IAAIC,KACJC,KAAK,CACFC,UA1FU,CAEdC,GAAI,CACAC,YAAa,CACTC,SAAU,0BACVC,aAAa,cACbC,iBAAiB,kBACjBC,iBAAiB,kBAEjBC,oBAAoB,UACpBC,oBAAoB,UAEpBC,iBAAkB,8BAClBC,eAAgB,gDAChBC,YAAa,qBACbC,YAAa,oBAEbC,iBAAiB,+BACjBC,kBAAkB,qBAClBC,sBAAsB,oCACtBC,mBAAmB,SACnBC,oBAAqB,mDACrBC,2BAA4B,yBAC5BC,sCAAsC,yCAEtCC,kBAAkB,yBAClBC,sBAAsB,iCACtBC,iBAAiB,2DACjBC,4BAA4B,oBAC5BC,4BAA4B,OAC5BC,mCAAmC,QACnCC,mBAAmB,sBACnBC,uBAAuB,UACvBC,iBAAkB,wBAClBC,yBAA0B,6CAC1BC,qBAAsB,+CACtBC,uBAAwB,6CAGxBC,gBAAgB,eAIxBC,GAAI,CACA/B,YAAa,CACTC,SAAU,sCACVC,aAAa,cACbC,iBAAiB,kBACjBC,iBAAiB,kBAEjBC,oBAAoB,QACpBC,oBAAoB,aAEpBC,iBAAkB,4BAClBC,eAAgB,iGAChBC,YAAa,4CACbC,YAAa,+BAEbC,iBAAiB,qCACjBC,kBAAkB,iCAClBC,sBAAsB,8CACtBC,mBAAmB,8BACnBC,oBAAqB,qEACrBC,2BAA4B,yBAC5BC,sCAAsC,2DAEtCC,kBAAkB,iCAClBC,sBAAsB,8CACtBC,iBAAiB,uDACjBC,4BAA4B,oBAC5BC,4BAA4B,0DAC5BC,mCAAmC,QACnCC,mBAAmB,wBACnBC,uBAAuB,UACvBC,iBAAkB,2BAClBC,yBAA0B,qDAC1BC,qBAAsB,0DACtBC,uBAAwB,+DAExBC,gBAAgB,oBAYpBE,IAAK,KACLC,cAAe,CACXC,aAAa,KAIVxC,EAAf,E,OAAeA,I,gCCrGAyC,EAFIC,0B,wBCFbC,EACE,OAGFC,EAAe,CACnBC,SAAU,KACVC,KAAM,KACNC,SAAU,KACVC,UAAW,KACXC,SAAU,MAGNC,EAAU,SAACC,EAAOC,GACtB,IAAQC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACd,GAAQD,IACDV,EACH,OAAO,2BAAKQ,GAAUG,GAEtB,MAAM,IAAIC,MAAM,gCAErB,E,OC0DcC,MAzEf,YAAkC,IAAZC,EAAW,EAAXA,SAClB,EAA0BC,qBAAWR,EAASN,GAA9C,mBAAOO,EAAP,KAAcQ,EAAd,KAEMxD,EAAOyD,sBAAW,iDACpB,WAAMf,GAAN,+FACQA,EADR,wBAEqB,IAAIgB,IAAKA,IAAKC,eAAiB,uBAFpD,SAKkBhB,EAAO,IAAIe,IAAKA,IAAKC,eAAiB,uBALxD,SAMmChB,EAAKiB,IAAIC,kBAN5C,cAMkBjB,EANlB,gBAOoCD,EAAKiB,IAAIE,IAAIC,QAPjD,OAOkBlB,EAPlB,OAQmBmB,EAAOtB,EAAPsB,IAEP,IACIC,EAAUvB,EAASwB,SAASrB,GAAWoB,QACvCnB,EAAW,IAAIH,EAAKiB,IAAIO,SAASH,EAAKC,EAIzC,CAHC,MAAOG,GACLC,QAAQC,MAAM,wBACdD,QAAQC,MAAMF,EACjB,CACDZ,EAAS,CACLN,KAAMV,EACNW,KAAM,CAACT,WAAUC,OAAMC,WAAUC,YAAWC,cAnB5D,kDAsBYuB,QAAQE,IAAI,oCAtBxB,0DADoB,sDA2BjB,IAiCP,OA/BAC,qBAAU,WACN,IAAMC,EAAO,iDAAG,8FACZ,IACU/B,EAAWgC,EAAQ,KACzB1E,EAAK0C,EAKR,CAJC,MAAO0B,GACLC,QAAQC,MAAM,2BAEdD,QAAQC,MAAMF,EACjB,CARW,2CAAH,qDAWbK,GACH,GAAE,CAACzE,IAEJwE,qBAAU,WACN,IAAMG,EAAS,CAAC,eAAgB,mBAC1BC,EAAe,WACjB5E,EAAKgD,EAAMN,SACd,EACD,IAGI,OADAiC,EAAOE,SAAQ,SAAAC,GAAC,OAAIC,OAAOC,SAASC,GAAGH,EAAGF,EAA1B,IACT,WACHD,EAAOE,SAAQ,SAAAC,GAAC,OAAIC,OAAOC,SAASE,eAAeJ,EAAGF,EAAtC,GACnB,CAGJ,CAFC,SACEP,QAAQE,IAAI,mCACf,CACJ,GAAE,CAACvE,EAAMgD,EAAMN,WAGZ,cAAC,EAAWyC,SAAZ,CAAqBC,MAAO,CACxBpC,QACAQ,YAFJ,SAIKF,GAGZ,ECvEc+B,EAFA,kBAAMC,qBAAWhD,EAAjB,E,wCCHA,MAA0B,qCCA1B,MAA0B,+BCA1B,MAA0B,mC,OC2E1BiD,MA9Df,WAEI,MAAkBC,cAAXC,EAAP,EAAOA,EAAGC,EAAV,EAAUA,KACNC,GAAoB,IAAIC,MAAOC,UAE7BC,EAAc,SAAAC,IACV,IAAIH,MAAOC,UAAYF,EAAqB,MAC9CD,EAAKM,eAAeD,EAAME,OAAOC,IACjCP,GAAoB,IAAIC,MAAOC,UAEtC,EAGKM,EACF,mCACI,qBACID,GAAG,KACHE,IAAI,GACJC,IAAKnG,EACLoG,MAAM,KACNC,OAAO,KACPC,QAASV,MAIfW,EACF,mCACI,qBACIP,GAAG,KACHE,IAAI,GACJC,IAAKnE,EACLoE,MAAM,KACNC,OAAO,KACPC,QAASV,MAIrB,OACI,qCACI,eAACY,EAAA,EAAD,CAAQC,UAAU,sCAAlB,UACI,cAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,QAAnB,SACI,qBACIT,IAAI,GACJC,IAAKS,EACLR,MAAM,MACNC,OAAO,MACPI,UAAU,+BAGlB,cAACI,EAAA,EAAD,CAAKJ,UAAU,WAAf,SAE0B,OAAlBjB,EAAKsB,SAAoBP,EAAaN,OAIlD,cAACO,EAAA,EAAD,CAAQO,QAAQ,QAAQN,UAAU,sCAAlC,SACI,6BAAKlB,EAAE,kBAItB,E,iBClDcyB,MAdf,WACI,IAAOzB,EAAKD,cAALC,EAGP,OACI,mCACI,eAACiB,EAAA,EAAD,CAAQO,QAAQ,QAAQN,UAAU,sCAAlC,UACI,cAACQ,EAAA,EAAD,CAAQF,QAAQ,QAAhB,SAAyBxB,EAAE,yBAC3B,cAAC0B,EAAA,EAAD,CAAQF,QAAQ,QAAhB,SAAyBxB,EAAE,6BAI1C,E,gCCuEc2B,MAjFf,YAAyC,IAAvBC,EAAsB,EAAtBA,oBACd,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEOjC,EAAKD,cAALC,EAJ6B,SAMrBkC,EANqB,wFAMpC,WAAqBC,GAArB,0FACUC,EAAS,IAAIC,YACZC,kBAAkBH,GAF7B,SAGyB,IAAII,SAAQ,SAACC,EAASC,GACvCL,EAAOM,OAAS,SAAUpC,GACtBkC,EAAQJ,EAAOO,OAClB,CACJ,IAPL,cAGUA,EAHV,yBAQWA,GARX,4CANoC,+BAmBrBC,EAnBqB,wFAmBpC,WAAwBC,GAAxB,iGAC4BX,EAAMW,GADlC,OACQC,EADR,OAEIC,OAAOC,OAAOC,OAAO,UAAWH,GAAaI,MACzC,SAACC,GACG,IACMC,EADYC,MAAMC,KAAK,IAAIC,WAAWJ,IAClBK,KAAI,SAACC,GAAD,OAAOA,EAAEC,SAAS,IAAIC,SAAS,EAAG,IAAlC,IAAwCC,KAAK,IAC3E3B,EAAgBmB,GAChBxB,EAAoBwB,EACvB,IART,4CAnBoC,sBAkCpC,OACI,mCACI,eAACS,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,uBACA,cAACD,EAAA,EAAD,CAAY3C,UAAU,WAAtB,SAEI,cAAC,IAAD,CAAW6C,OAAM,iDAAE,WAAOC,GAAP,2FACTpB,EAASoB,EAAc,IADd,OAEfpF,QAAQE,IAAIkF,EAAc,IAC1BjC,EAAgBiC,EAAc,GAAGC,MAHlB,2CAAF,sDAAjB,SAKK,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACG,kCACI,gDAASD,KAAT,cACI,qCAAWC,MACX,4BACqB,KAAjBrC,EAAsB9B,EAAE,oBAAqB8B,SAL5D,MAcT,uBACC9B,EAAE,kBACH,uBACA,uBACA,eAACoE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAuB,KAAjBrC,EAAsB,GAAIhC,EAAE,iBAClC,cAACqE,EAAA,EAAD,CAAM5D,GAAG,aAAT,SAAwC,KAAjBuB,EAAsB,GAAIA,EAAa0B,gBAElE,uBAEA,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAKnD,UAAU,wCAAf,SAAwD,cAACQ,EAAA,EAAD,CAAQX,QAzChF,WACI,IAAIuD,EAAWC,SAASC,eAAe,cACvCC,UAAUC,UAAUC,UAAUL,EAASM,YAC1C,EAsCuE,SAAwB5E,EAAE,mBAClF,cAACqE,EAAA,EAAD,OAEJ,2BAKf,E,gBC1Fc,MAA0B,uC,iBC0N1BQ,MA3Mf,YAA0E,IAAnDC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,iBAAkBnD,EAAsB,EAAtBA,oBAC/C,EAA0ChC,IAAlCrC,MAASJ,EAAjB,EAAiBA,SAAUE,EAA3B,EAA2BA,SAE3B,EAAkCwE,mBAAS,IAA3C,mBAAOmD,EAAP,KAAkBC,EAAlB,KACA,EAAkCpD,mBAAS,IAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACA,EAAsCtD,mBAAS,GAA/C,mBAAOuD,EAAP,KAAoBC,EAApB,KAEA,EAAwCxD,mBAAS,IAAjD,mBAAOyD,EAAP,KAAqBC,EAArB,KACA,EAA4C1D,mBAAS,IAArD,mBAAO2D,EAAP,KAAuBC,EAAvB,KAEA1G,qBAAW,WACPwG,EAAiBT,EAAiBA,EAASpB,WAAf,GAC/B,GAAE,CAAEoB,IAGL/F,qBAAU,WACN,IAAM2G,EAAuB,iDAAG,0GAGJ,GAAhBJ,EAHoB,gCAIDjI,EAASsI,QAAQC,gBAAgBN,GAAcO,OAJ9C,OAIhBlD,EAJgB,OAKpBwC,EAAaxC,GALO,uDAQxB/D,QAAQE,IAAI,SARY,yDAAH,qDAWzBzB,GAEIqI,GAGX,GAAE,CAACrI,EAAUiI,IAmBd,IAAMQ,EAAY,iDAAG,8GACIzI,EAASsI,QAAQI,UAAUf,EAAWM,GAAeU,KAAM,CAAE1C,KAAMnG,EAAS,KADhF,QACb8I,EADa,QAEHb,aACVC,EAAeY,EAASb,aAHX,2CAAH,qDAOXpF,EAAKD,cAALC,EA6BDkG,EAAc,CAChBtF,IAAKuF,EACLrF,OAAO,GACPD,MAAM,IAEV,OACI,mCACI,eAACgD,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,uBACA,eAACM,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK+B,GAAI,EAAT,SAAY,cAACC,EAAA,EAAKC,MAAN,CAAYC,QAAQ,WAApB,SAAgCvG,EAAE,wBAC9C,cAACqE,EAAA,EAAD,UACI,cAACgC,EAAA,EAAKG,QAAN,CAAc/I,KAAK,OAAOgD,GAAG,WAAWgG,SA1D5D,SAA0BnG,GACrBiF,EAAiBjF,EAAME,OAAOb,OAC/BiC,EAAoBtB,EAAME,OAAOb,MACpC,EAwDiCA,MAAO2F,SAG7B,uBACA,eAAClB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK+B,GAAI,EAAT,SAAY,cAACC,EAAA,EAAKC,MAAN,CAAYC,QAAQ,eAApB,SAAoCvG,EAAE,yBAClD,eAACqE,EAAA,EAAD,WACI,cAACgC,EAAA,EAAKG,QAAN,CAAc/I,KAAK,OAAOgD,GAAG,eAAegG,SAvEhE,SAAsBnG,GACjB2E,EAAc3E,EAAME,OAAOb,OAC5BoF,EAAiBzE,EAAME,OAAOb,MACjC,EAqEiCA,MAAOqF,IACrB,cAACqB,EAAA,EAAKK,KAAN,CAAWjG,GAAG,oBAAoBkG,OAAK,EAAvC,SAAyC3G,EAAE,iCAEnD,uBACA,eAACoE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAKnD,UAAU,6CAAf,SACI,cAACQ,EAAA,EAAD,CAAQX,QAAS+E,EAAcc,WAEZ,GAAb1B,GAFN,SAGGlF,EAAE,0BACT,cAACqE,EAAA,EAAD,OAGJ,uBAGqB,GAAba,EAAmB,6BAAQ,mCAE3B,cAAC2B,EAAA,EAAD,CAAQrF,QAAQ,SAAhB,SACI,eAAC4C,EAAA,EAAD,WAEA,cAACC,EAAA,EAAD,CAAK+B,GAAI,EAAT,SAAapG,EAAE,yBACX,cAACqE,EAAA,EAAD,UAAMa,WAUtB,cAACd,EAAA,EAAD,UAEwB,IAAhBgB,EAAoB,6BAAQ,qCACxB,cAACf,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAKnD,UAAU,6CAAf,SACI,cAAC,IAAD,CACIT,GAAG,WACHd,MAAO,iCAAiCyF,EACxC0B,KAAM,IACNC,QAAS,UACTC,QAAS,UACTC,MAAO,IACPC,eAAe,EACfnG,QA/FT,WACnB,IAAMoG,EAAY5C,SAASC,eAAe,YACrC4C,UAAU,aACVC,QAAQ,YAAa,sBACtBC,EAAM/C,SAASgD,cAAc,KACjCD,EAAIlG,KAAO+F,EACXG,EAAIE,SAAW,cACfjD,SAASkD,KAAKC,YAAYJ,GAC1BA,EAAIK,QACJpD,SAASkD,KAAKG,YAAYN,EAC7B,EAsF+BO,cAAe3B,MAGvB,cAAC7B,EAAA,EAAD,SAMZ,uBACA,eAACD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK+B,GAAI,EAAT,SAAY,cAACC,EAAA,EAAKC,MAAN,CAAYC,QAAQ,iBAApB,SAAsCvG,EAAE,kCACpD,cAACqE,EAAA,EAAD,UACI,cAACgC,EAAA,EAAKG,QAAN,CAAc/I,KAAK,OAAOgD,GAAG,iBAAiBgG,SA1HlE,SAAoCnG,GAC/BmF,EAAmBnF,EAAME,OAAOb,MACpC,EAyHiCA,MAAO6F,SAG7B,uBAEA,cAACpB,EAAA,EAAD,UAE2B,KAAnBoB,EAAwB,6BAAQ,qCAC5B,cAACnB,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAKnD,UAAU,6CAAf,SACI,cAAC,IAAD,CACIT,GAAG,iBACHd,MAAO6F,EACPsB,KAAM,IACNC,QAAS,UACTC,QAAS,UACTC,MAAO,IACPC,eAAe,EACfnG,QAnHK,WACjC,IAAMoG,EAAY5C,SAASC,eAAe,kBACrC4C,UAAU,aACVC,QAAQ,YAAa,sBACtBC,EAAM/C,SAASgD,cAAc,KACjCD,EAAIlG,KAAO+F,EACXG,EAAIE,SAAW,0BACfjD,SAASkD,KAAKC,YAAYJ,GAC1BA,EAAIK,QACJpD,SAASkD,KAAKG,YAAYN,EAC7B,EA0G+BO,cAAe3B,MAGvB,cAAC7B,EAAA,EAAD,aAU3B,E,iBCoBcyD,MA3Nf,YAA0C,IAAnBC,EAAkB,EAAlBA,MAAOjD,EAAW,EAAXA,SACRzH,EAAeuC,IAAzBrC,MAAUF,SAClB,EAA4BwE,mBAAS,IAArC,mBAAOmG,EAAP,KAAeC,EAAf,KACA,EAAkCpG,mBAAS,IAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACA,EAAoCtD,oBAAS,GAA7C,mBAAOqG,EAAP,KAAmBC,EAAnB,KAEA,EAA0CtG,mBAAS,IAAnD,mBAAOuG,EAAP,KAAsBC,EAAtB,KACA,EAAwCxG,mBAAS,IAAjD,mBAAOyD,EAAP,KAAqBC,EAArB,KAEAxG,qBAAW,WACPsJ,EAAiBN,GACjBxC,EAAgBT,EACnB,GAAE,CAACiD,EAAOjD,IAGX,IAAO9E,EAAKD,cAALC,EAEPjB,qBAAU,WACN,IAAMuJ,EAAuB,iDAAG,0GAEK,KAAzBF,EAAcG,OAFM,gCAGDlL,EAASsI,QAAQ6C,oBAAoBJ,GAAevC,OAHnD,OAGhBlD,EAHgB,OAIpBsF,EAAUtF,GAJU,sBAMpB/D,QAAQE,IAAI,qBAAuBsJ,EAAcG,QAN7B,yDASxB3J,QAAQE,IAAI,SATY,0DAAH,qDAYzBzB,GACI+K,EAAcG,OAAS,GACvBD,GAGX,GAAE,CAACjL,EAAU+K,IAsDd,IAAMK,EAAiB,SAACnI,GACpB,IAAM6G,EAAY5C,SAASC,eAAgBlE,EAAME,OAAOC,IACnD2G,UAAU,aACVC,QAAQ,YAAa,sBACtBC,EAAM/C,SAASgD,cAAc,KACjCD,EAAIlG,KAAO+F,EACXG,EAAIE,SAAW,WAAalH,EAAME,OAAOC,GAAK,OAC9C8D,SAASkD,KAAKC,YAAYJ,GAC1BA,EAAIK,QACJpD,SAASkD,KAAKG,YAAYN,EAC7B,EAKKpB,EAAc,CAChBtF,IAAKuF,EACLrF,OAAO,GACPD,MAAM,IAEV,OACI,mCACI,cAACgD,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,sBAAK5C,UAAU,mBAAf,UAEA,uBACA,eAACkD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK+B,GAAI,EAAT,SAAY,cAACC,EAAA,EAAKC,MAAN,CAAYC,QAAQ,eAApB,SAAoCvG,EAAE,yBAIlD,eAACqE,EAAA,EAAD,WACI,cAACgC,EAAA,EAAKG,QAAN,CAAc/I,KAAK,OAAOgD,GAAG,eAAegG,SAxChE,SAAsBnG,GACjB+H,EAAkB/H,EAAME,OAAOb,MACnC,EAuCiCA,MAAOyI,IACrB,cAAC/B,EAAA,EAAKK,KAAN,CAAWjG,GAAG,oBAAoBkG,OAAK,EAAvC,SAAyC3G,EAAE,iCAInD,uBAEA,eAACoE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK+B,GAAI,IACT,cAAC/B,EAAA,EAAD,CAAKnD,UAAU,6CAAf,SAA4D,cAACQ,EAAA,EAAD,CAAQX,QA9FpF,WAEI,IAAMuH,EAAuB,iDAAG,0GAEK,KAAzBF,EAAcG,OAFM,gCAGDlL,EAASsI,QAAQ6C,oBAAoBJ,GAAevC,OAHnD,OAGhBlD,EAHgB,OAIpBsF,EAAUtF,GAJU,sBAMpB/D,QAAQE,IAAI,qBAAuBsJ,EAAcG,QAN7B,yDASxB3J,QAAQE,IAAI,SATY,0DAAH,qDAYzBzB,GACI+K,EAAcG,OAAS,GACvBD,GAGX,EA2E2E,SAA8BtI,EAAE,wBAC5F,cAACqE,EAAA,EAAD,OAGJ,cAACD,EAAA,EAAD,UACI,eAACsE,EAAA,EAAD,WACI,gCACA,6BAEQV,EAAOO,OAAS,EAAI,qCAChB,6BAAKvI,EAAE,iCACP,6BAAKA,EAAE,iCACP,6BAAKA,EAAE,wCACP,oBAAIe,QA3CpC,WACIoH,GAAeD,EAClB,EAyC+B,SACiBlI,EAAbkI,EAAe,qBAA0B,+BAE3C,iCAKd,gCAGIF,EAAOxE,KAAI,SAACmF,GAAD,OAAY,+BACf,6BACK,IAAIxI,KAAuB,IAAlBwI,EAAM5C,WAAkB6C,mBAEtC,6BACKD,EAAMxF,OAEX,6BACI,mBAAG/B,KAAM,iCAAiCuH,EAAMvD,YAAhD,SAA8DuD,EAAMvD,gBAExE,oBAAIyD,OAAQX,EAAZ,SACI,cAAC,IAAD,CACIzH,GAAI,WAAakI,EAAMvD,YACvBzF,MAAO,iCAAiCgJ,EAAMvD,YAC9C0B,KAAM,IACNC,QAAS,UACTC,QAAS,UACTC,MAAO,IACPC,eAAe,EACfnG,QAAS0H,EACTZ,cAAe3B,QApBCyC,EAAMvD,YAA3B,WAiCvB,eAAChB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK+B,GAAI,EAAT,SAAY,cAACC,EAAA,EAAKC,MAAN,CAAYC,QAAQ,mBAApB,SAAwCvG,EAAE,wBACtD,eAACqE,EAAA,EAAD,eAAM,cAACgC,EAAA,EAAKG,QAAN,CAAc/I,KAAK,OAAOgD,GAAG,mBAAmBgG,SAzGtE,SAA0BnG,GACrBiF,EAAiBjF,EAAME,OAAOb,MAClC,EAwGmCA,MAAO2F,IACvB,cAACe,EAAA,EAAKK,KAAN,CAAWjG,GAAG,oBAAoBkG,OAAK,EAAvC,SAAyC3G,EAAE,oCAGnD,eAACoE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK+B,GAAI,IACT,cAAC/B,EAAA,EAAD,CAAKnD,UAAU,6CAAf,SAA4D,cAACQ,EAAA,EAAD,CAAQX,QA3IpF,WAEI,IAAM2E,EAAuB,iDAAG,0GAEI,KAAxBJ,EAAaiD,OAFO,gCAGDlL,EAASsI,QAAQC,gBAAgBN,GAAcO,OAH9C,OAGhBlD,EAHgB,OAIpBwC,EAAaxC,GAJO,sBAQpB/D,QAAQE,IAAI,wBAA0BwG,EAAaiD,QAR/B,yDAWxB3J,QAAQE,IAAI,SAXY,0DAAH,qDAczBzB,GACIiI,EAAaiD,OAAS,GACtB7C,GAGX,EAsH2E,SAAkC1F,EAAE,4BAChG,cAACqE,EAAA,EAAD,OAIiB,GAAba,EAAmB,6BAAQ,mCAAE,eAACd,EAAA,EAAD,WAC7B,cAACC,EAAA,EAAD,CAAK+B,GAAI,EAAT,SAAapG,EAAE,4BACf,cAACqE,EAAA,EAAD,UAAMa,eAa7B,ECjKc4D,MAtDf,WAEI,IAAO9I,EAAKD,cAALC,EAEP,EAAgC6B,mBAAS,IAAzC,mBAAOiD,EAAP,KAAiBiE,EAAjB,KACA,EAA0BlH,mBAAS,IAAnC,mBAAOkG,EAAP,KAAciB,EAAd,KACMpH,EAAmB,iDAAG,WAAOqH,GAAP,2EACxBF,EAAYE,GADY,2CAAH,sDAGnBlE,EAAgB,iDAAG,WAAOkE,GAAP,2EACrBD,EAASC,GADY,2CAAH,sDAItB,OAAQ,qCACA,cAAC,EAAD,IAEA,cAACpF,EAAA,EAAD,CAAW3C,UAAU,aAArB,SACI,eAACgI,EAAA,EAAD,CAAMC,MAAI,EAACC,iBAAkB,EAAG3I,GAAG,2BAAnC,UAEI,cAAC4I,EAAA,EAAD,CAAKC,SAAU,EAAGC,MAAOvJ,EAAE,gBAA3B,SAEI,cAAC,EAAD,CAAS4B,oBAAqBA,MAKlC,cAACyH,EAAA,EAAD,CAAKC,SAAU,EAAGC,MAAOvJ,EAAE,oBAA3B,SACI,cAAC,EAAD,UAEA,cAAC,EAAD,CAAc8E,SAAUA,EAAUC,iBAAkBA,EAAkBnD,oBAAqBA,QAG/F,cAACyH,EAAA,EAAD,CAAKC,SAAU,EAAGC,MAAOvJ,EAAE,oBAA3B,SACI,cAAC,EAAD,UAEA,cAAC,EAAD,CAAc+H,MAAOA,EAAOjD,SAAUA,aAYlD,cAAC,EAAD,MAKX,EC5Dc0E,MARf,WACE,OACI,qBAAK/I,GAAG,MAAR,SACE,cAAC,EAAD,KAGP,ECEYgJ,IAASC,WAAWnF,SAASC,eAAe,SACpDmF,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,M","file":"static/js/main.342ba439.chunk.js","sourcesContent":["import i18next from \"i18next\";\n\nimport {initReactI18next} from \"react-i18next\";\n\n// \"Inline\" English and Arabic translations.\n\n// We can localize to any language and any number of languages.\n\nconst resources = {\n\n    en: {\n        translation: {\n            app_name: \"CONSIGNATION BLOCKCHAIN\",\n            encodingMain:\"1) Encoding\",\n            consignationMain:\"2) Consignation\",\n            consultationMain:\"3) Consultation\",\n\n            pricingButtonFooter:\"Pricing\",\n            contactButtonFooter:\"Contact\",\n\n            dragNDropEncoder: \"Drag 'n' drop the file here\",\n            warningEncoder: \"Warning: your file is not stored on this site\",\n            hashEncoder: \"Computed signature\",\n            copyEncoder: \"Copy to clipboard\",\n\n            hashConsignation:\"Numerical signature of file:\",\n            ownerConsignation:\"Owner of the file:\",\n            inputTextConsignation:\"Polygon Blockchain public address\",\n            recordConsignation:\"Record\",\n            alreadyConsignation: \"This numerical signature is already recorded by \",\n            googleDriveUrlConsignation: \"Google drive address: \",\n            generateGoogleDriveQRCodeConsignation:\"Generate QR Code with Google drive URL\",\n\n            ownerConsultation:\"Owner account address:\",\n            inputTextConsultation:\"Address on the Polygon Mainnet\",\n            listConsultation:\"Get numerical signatures recorded for this owner address\",\n            dateTransactionConsultation:\"Date ( dd/mm/yy )\",\n            hashTransactionConsultation:\"Hash\",\n            blockNumberTransactionConsultation:\"Block\",\n            qrcodeConsultation:\"QR Code (clic here)\",\n            qrcodeHideConsultation:\"QR Code\",\n            hashConsultation: \"Numerical signature: \",\n            hashInputMsgConsultation: \"Numerical signature on 64 digits lowercase\",\n            getOwnerConsultation: \"Check the owner for this numerical signature\",\n            recordedByConsultation: \"This numerical signature was recorded by: \",\n\n\n            contactUsFooter:\"Contact us\",\n\n        },\n    },\n    fr: {\n        translation: {\n            app_name: \"Tiers Déposant sur la Blockchain\",\n            encodingMain:\"1) Encodage\",\n            consignationMain:\"2) Consignation\",\n            consultationMain:\"3) Consultation\",\n\n            pricingButtonFooter:\"C.G.U\",\n            contactButtonFooter:\"Assistance\",\n\n            dragNDropEncoder: \"Déposer le fichier ici\",\n            warningEncoder: \"Attention: ce site n’a pas accès à votre fichier, conservez-le sans limite de temps\",\n            hashEncoder: \"Empreinte numérique de votre fichier: \",\n            copyEncoder: \"Copier dans le presse papier\",\n\n            hashConsignation:\"Empreinte numérique du fichier:\",\n            ownerConsignation:\"Adresse du tiers déposant :\",\n            inputTextConsignation:\"Adresse publique sur la blockchain Polygon.\",\n            recordConsignation:\"Enregistrer la consignation\",\n            alreadyConsignation: \"L'empreinte numérique a déjà été déposée par \",\n            googleDriveUrlConsignation: \"Adresse Google drive: \",\n            generateGoogleDriveQRCodeConsignation:\"Generer le QR Code avec l'url Google drive du certificat\",\n\n            ownerConsultation:\"Adresse du tiers déposant :\",\n            inputTextConsultation:\"Adresse publique sur la blockchain Polygon.\",\n            listConsultation:\"Liste des empreintes numeriques du tiers déposant\",\n            dateTransactionConsultation:\"Date ( dd/mm/yy )\",\n            hashTransactionConsultation:\"Empreinte numérique enregistrée sur la blockchain\",\n            blockNumberTransactionConsultation:\"Block\",\n            qrcodeConsultation:\"QR Code (cliquer ici)\",\n            qrcodeHideConsultation:\"QR Code\",\n            hashConsultation: \"Empreinte numérique: \",\n            hashInputMsgConsultation: \"Empreinte numérique sur 64 digits en minuscules\",\n            getOwnerConsultation: \"Vérifier la consignation de l'empreinte numérique\",\n            recordedByConsultation: \"Cette empreinte numérique a été déposée par: \",\n\n            contactUsFooter:\"Nous contacter\",\n\n        },\n\n    },\n\n};\n\ni18next\n    .use(initReactI18next)\n    .init({\n        resources,\n        lng: \"fr\",\n        interpolation: {\n            escapeValue: false,\n        },\n    });\n\nexport default i18next;\n\n","import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, {useReducer, useCallback, useEffect} from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport {reducer, actions, initialState} from \"./state\";\n\nfunction EthProvider({children}) {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const init = useCallback(\n        async artifact => {\n            if (artifact) {\n                const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n\n                try {\n                    const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n                    const accounts = await web3.eth.requestAccounts();\n                    const networkID = await web3.eth.net.getId();\n                    const {abi} = artifact;\n                    let address, contract;\n                    try {\n                        address = artifact.networks[networkID].address;\n                        contract = new web3.eth.Contract(abi, address);\n                    } catch (err) {\n                        console.error('EthProvider init err');\n                        console.error(err);\n                    }\n                    dispatch({\n                        type: actions.init,\n                        data: {artifact, web3, accounts, networkID, contract}\n                    });\n                } catch {\n                    console.log('ERROR: not metamask connection 1')\n                }\n\n            }\n        }, []);\n\n    useEffect(() => {\n        const tryInit = async () => {\n            try {\n                const artifact = require(\"../../contracts/Timestamper.json\");\n                init(artifact);\n            } catch (err) {\n                console.error('EthProvider tryinit err');\n\n                console.error(err);\n            }\n        };\n\n        tryInit();\n    }, [init]);\n\n    useEffect(() => {\n        const events = [\"chainChanged\", \"accountsChanged\"];\n        const handleChange = () => {\n            init(state.artifact);\n        };\n        try {\n\n            events.forEach(e => window.ethereum.on(e, handleChange));\n            return () => {\n                events.forEach(e => window.ethereum.removeListener(e, handleChange));\n            };\n        } catch {\n            console.log('ERROR: not metamask connection 2')\n        }\n    }, [init, state.artifact]);\n\n    return (\n        <EthContext.Provider value={{\n            state,\n            dispatch\n        }}>\n            {children}\n        </EthContext.Provider>\n    );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","export default __webpack_public_path__ + \"static/media/LogoWEB3.e3952f31.png\";","export default __webpack_public_path__ + \"static/media/en.18e9545f.png\";","export default __webpack_public_path__ + \"static/media/french.0ce53ca1.png\";","import React from \"react\";\n\nimport {useTranslation} from \"react-i18next\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nimport logo from \"../../assets/LogoWEB3.png\";\nimport en from \"../../assets/en.png\";\nimport fr from \"../../assets/french.png\";\n\nimport \"./header.css\"\n\nfunction Header() {\n\n    const {t, i18n} = useTranslation();\n    let preventDoubleClic = new Date().getTime();\n\n    const handleClick = event => {\n        if ( (new Date().getTime() - preventDoubleClic) > 200 ) {\n            i18n.changeLanguage(event.target.id);\n            preventDoubleClic = new Date().getTime();\n        }\n    };\n\n\n    const enFlag =\n        <>\n            <img\n                id='en'\n                alt=\"\"\n                src={en}\n                width=\"20\"\n                height=\"13\"\n                onClick={handleClick}\n            />\n        </>;\n\n    const frenchFlag =\n        <>\n            <img\n                id='fr'\n                alt=\"\"\n                src={fr}\n                width=\"20\"\n                height=\"13\"\n                onClick={handleClick}\n            />\n        </>;\n\n    return (\n        <>\n            <Navbar className=\"header-style justify-content-center\">\n                <Navbar.Brand href=\"#home\">\n                    <img\n                        alt=\"\"\n                        src={logo}\n                        width=\"450\"\n                        height=\"150\"\n                        className=\"d-inline-block align-top\"\n                    />\n                </Navbar.Brand>\n                <Nav className=\"topright\">\n                    {\n                        i18n.language === 'en' ? frenchFlag : enFlag\n                    }\n                </Nav>\n            </Navbar>\n            <Navbar variant=\"light\" className=\"header-style justify-content-center\">\n                <h2>{t(\"app_name\")}</h2>\n            </Navbar>\n        </>\n    );\n}\n\nexport default Header;\n\n\n// import logo from '../../assets/LogoCeleniumWeb3.png';\n// import Container from 'react-bootstrap/Container';\n// import Navbar from 'react-bootstrap/Navbar';\n// import { useTranslation } from \"react-i18next\";\n// import LanguageSwitcher from \"../LanguageSwitcher\";\n// import Nav from 'react-bootstrap/Nav';\n//\n// import \"./header.css\"\n//\n// function Header() {\n//\n//     const { t } = useTranslation();\n//\n//     return (\n//         <>\n//             <Navbar bg=\"dark\" variant=\"dark\">\n//                 <Container fluid>\n//                     <Navbar.Brand href=\"#home\">\n//                         <img\n//                             alt=\"\"\n//                             src={logo}\n//                             width=\"50\"\n//                             height=\"50\"\n//                             className=\"d-inline-block align-top\"\n//                         />{' '}\n//                         {t(\"titleMain\")}\n//                     </Navbar.Brand>\n//                     <Nav.Item>\n//                         <LanguageSwitcher />\n//\n//                     </Nav.Item>\n//\n//                 </Container>\n//             </Navbar>\n//         </>\n//     );\n// }\n//\n// export default Header;\n\n","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\n\n\nimport \"./footer.css\"\nimport Button from \"react-bootstrap/Button\";\n\nfunction Footer() {\n    const {t} = useTranslation();\n\n\n    return (\n        <>\n            <Navbar variant=\"light\" className=\"footer-style justify-content-center\">\n                <Button variant=\"light\">{t(\"pricingButtonFooter\")}</Button>\n                <Button variant=\"light\">{t(\"contactButtonFooter\")}</Button>\n            </Navbar>\n        </>\n    );\n}\n\nexport default Footer;\n\n\n// import logo from '../../assets/LogoCeleniumWeb3.png';\n// import Container from 'react-bootstrap/Container';\n// import Navbar from 'react-bootstrap/Navbar';\n// import { useTranslation } from \"react-i18next\";\n// import LanguageSwitcher from \"../LanguageSwitcher\";\n// import Nav from 'react-bootstrap/Nav';\n//\n// import \"./header.css\"\n//\n// function Header() {\n//\n//     const { t } = useTranslation();\n//\n//     return (\n//         <>\n//             <Navbar bg=\"dark\" variant=\"dark\">\n//                 <Container fluid>\n//                     <Navbar.Brand href=\"#home\">\n//                         <img\n//                             alt=\"\"\n//                             src={logo}\n//                             width=\"50\"\n//                             height=\"50\"\n//                             className=\"d-inline-block align-top\"\n//                         />{' '}\n//                         {t(\"titleMain\")}\n//                     </Navbar.Brand>\n//                     <Nav.Item>\n//                         <LanguageSwitcher />\n//\n//                     </Nav.Item>\n//\n//                 </Container>\n//             </Navbar>\n//         </>\n//     );\n// }\n//\n// export default Header;\n\n","import React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Dropzone from \"react-dropzone\";\n\nimport \"./encoder.css\"\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction Encoder({setUploadedFileHash}) {\n    const [selectedFile, setSelectedFile] = useState('');\n    const [computedHash, setComputedHash] = useState('');\n\n    const {t} = useTranslation();\n\n    async function parse(file) {\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        const result = await new Promise((resolve, reject) => {\n            reader.onload = function (event) {\n                resolve(reader.result)\n            }\n        })\n        return result;\n    }\n\n\n\n    async function loadFile(theSelectedFile) {\n        let fileContent = await parse(theSelectedFile);\n        crypto.subtle.digest('SHA-256', fileContent).then(\n            (hash) => {\n                const hashArray = Array.from(new Uint8Array(hash));                     // convert buffer to byte array\n                const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n                setComputedHash(hashHex)\n                setUploadedFileHash(hashHex)\n            })\n    }\n\n    function copy() {\n        let copyText = document.getElementById(\"hashToCopy\");\n        navigator.clipboard.writeText(copyText.textContent);\n    }\n    return (\n        <>\n            <Container fluid>\n                <br/>\n                <Container  className='dropzone'>\n\n                    <Dropzone  onDrop={async (selectedFiles) => {\n                        await loadFile(selectedFiles[0])\n                        console.log(selectedFiles[0])\n                        setSelectedFile(selectedFiles[0].name);\n                    }}>\n                        {({getRootProps, getInputProps}) => (\n                            <section>\n                                <div {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                    <p>{\n                                        selectedFile === \"\" ? t(\"dragNDropEncoder\"): selectedFile\n                                    }</p>\n                                </div>\n                            </section>\n                        )}\n                    </Dropzone>\n\n                </Container>\n\n                <br/>\n                {t(\"warningEncoder\")}\n                <br/>\n                <br/>\n                <Row>\n                    <Col>{computedHash === '' ? '': t(\"hashEncoder\")}</Col>\n                    <Col  id='hashToCopy'>{computedHash === '' ? '': computedHash.toString()}</Col>\n                </Row>\n                <br/>\n\n                <Row>\n                    <Col></Col>\n                    <Col className=\"encoder-style  justify-content-center\" ><Button onClick={copy}>{t(\"copyEncoder\")}</Button></Col>\n                    <Col></Col>\n                </Row>\n                <br/>\n\n            </Container>\n        </>\n    );\n}\n\nexport default Encoder;\n","export default __webpack_public_path__ + \"static/media/IconeKeyQR.462b7cb5.png\";","import React, {useEffect, useState} from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nimport {useTranslation} from \"react-i18next\";\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport inconeQR from \"../../assets/IconeKeyQR.png\";\n\nimport \"./consignation.css\"\nimport QRCode from \"qrcode.react\";\nfunction Consignation({fileHash, setOwnerInParent, setUploadedFileHash}) {\n    const { state: { accounts, contract } } = useEth();\n\n    const [recipient, setRecipient] = useState(\"\");\n    const [hashOwner, setHashOwner] = useState('');\n    const [blockNumber, setBlockNumber] = useState(0);\n\n    const [editableHash, setEditableHash] = useState('');\n    const [googleDriveUrl, setGoogleDriveUrl] = useState('');\n\n    useEffect( () => {\n        setEditableHash(!fileHash ? '' :  fileHash.toString());\n    }, [ fileHash]);\n\n\n    useEffect(() => {\n        const setHashOwnerFromPolygon = async () => {\n            try {\n                // eslint-disable-next-line\n                if (editableHash != 0x0) {\n                    let result = await contract.methods.getOwnerAddress(editableHash).call()\n                    setHashOwner(result)\n                }\n            } catch (error) {\n                console.log('error')\n            }\n        };\n        if (contract) {\n\n                setHashOwnerFromPolygon();\n\n        }\n    }, [contract, editableHash]);\n\n\n\n    function handleChange(event)\n    {    setRecipient( event.target.value);\n        setOwnerInParent(event.target.value);\n    }\n\n    function handleHashChange(event)\n    {    setEditableHash( event.target.value);\n        setUploadedFileHash(event.target.value);\n    }\n\n    function handleGoogleDriveUrlChange(event)\n    {    setGoogleDriveUrl( event.target.value);\n    }\n\n\n    const setTimestamp = async () => {\n        let response = await contract.methods.timestamp(recipient, editableHash,).send( { from: accounts[0] });\n        if ( response.blockNumber) {\n            setBlockNumber(response.blockNumber);\n        }\n    };\n\n    const {t} = useTranslation();\n    const downloadQRCode = () => {\n        const qrCodeURL = document.getElementById('qrCodeId')\n            .toDataURL(\"image/png\")\n            .replace(\"image/png\", \"image/octet-stream\");\n        let aEl = document.createElement(\"a\");\n        aEl.href = qrCodeURL;\n        aEl.download = \"QR_Code.png\";\n        document.body.appendChild(aEl);\n        aEl.click();\n        document.body.removeChild(aEl);\n    }\n\n\n    const downloadGoogleDriveUrlQRCode = () => {\n        const qrCodeURL = document.getElementById('googleQrCodeId')\n            .toDataURL(\"image/png\")\n            .replace(\"image/png\", \"image/octet-stream\");\n        let aEl = document.createElement(\"a\");\n        aEl.href = qrCodeURL;\n        aEl.download = \"QR_Code_Certificate.png\";\n        document.body.appendChild(aEl);\n        aEl.click();\n        document.body.removeChild(aEl);\n    }\n\n\n\n\n    const imgSettings = {\n        src: inconeQR,\n        height:40,\n        width:40\n    }\n    return (\n        <>\n            <Container fluid>\n                <br/>\n                <Row>\n                    <Col xs={5}><Form.Label htmlFor=\"fileHash\">{t(\"hashConsignation\")}</Form.Label></Col>\n                    <Col>\n                        <Form.Control type=\"text\" id=\"fileHash\" onChange={handleHashChange}\n                                      value={editableHash}/>\n                        </Col>\n                </Row>\n                <br/>\n                <Row>\n                    <Col xs={5}><Form.Label htmlFor=\"ownerAddress\">{t(\"ownerConsignation\")}</Form.Label></Col>\n                    <Col>\n                        <Form.Control type=\"text\" id=\"ownerAddress\" onChange={handleChange}\n                                      value={recipient}/>\n                        <Form.Text id=\"passwordHelpBlock\" muted>{t(\"inputTextConsignation\")}</Form.Text></Col>\n                </Row>\n                <br/>\n                <Row>\n                    <Col></Col>\n                    <Col className=\"consignation-style  justify-content-center\">\n                        <Button onClick={setTimestamp} disabled={\n                            // eslint-disable-next-line\n                            !(hashOwner == 0x0)\n                        }>{t(\"recordConsignation\")}</Button></Col>\n                    <Col></Col>\n                </Row>\n\n                <br/>\n                    {\n                        // eslint-disable-next-line\n                        hashOwner == 0x0 ? <></> : <>\n\n                        <Alert  variant='danger'>\n                            <Row>\n\n                            <Col xs={5}>{t(\"alreadyConsignation\")}</Col>\n                                <Col>{hashOwner}</Col>\n\n                            </Row>\n                        </Alert>\n\n\n\n                        </>\n\n                    }\n                <Row>\n                    {\n                        blockNumber === 0 ? <></> : <>\n                            <Col></Col>\n                            <Col className=\"consignation-style  justify-content-center\">\n                                <QRCode\n                                    id=\"qrCodeId\"\n                                    value={\"https://polygonscan.com/block/\"+blockNumber}\n                                    size={128}\n                                    bgColor={\"#ffffff\"}\n                                    fgColor={\"#000000\"}\n                                    level={\"H\"}\n                                    includeMargin={false}\n                                    onClick={downloadQRCode}\n                                    imageSettings={imgSettings}\n                                />\n                            </Col>\n                            <Col></Col>\n                        </>\n                    }\n\n                </Row>\n\n                <br/>\n                <Row>\n                    <Col xs={5}><Form.Label htmlFor=\"googleDriveUrl\">{t(\"googleDriveUrlConsignation\")}</Form.Label></Col>\n                    <Col>\n                        <Form.Control type=\"text\" id=\"googleDriveUrl\" onChange={handleGoogleDriveUrlChange}\n                                      value={googleDriveUrl}/>\n                    </Col>\n                </Row>\n                <br/>\n\n                <Row>\n                    {\n                        googleDriveUrl === '' ? <></> : <>\n                            <Col></Col>\n                            <Col className=\"consignation-style  justify-content-center\">\n                                <QRCode\n                                    id=\"googleQrCodeId\"\n                                    value={googleDriveUrl}\n                                    size={128}\n                                    bgColor={\"#ffffff\"}\n                                    fgColor={\"#000000\"}\n                                    level={\"H\"}\n                                    includeMargin={false}\n                                    onClick={downloadGoogleDriveUrlQRCode}\n                                    imageSettings={imgSettings}\n                                />\n                            </Col>\n                            <Col></Col>\n                        </>\n                    }\n\n                </Row>\n\n\n            </Container>\n        </>\n    );\n}\n\nexport default Consignation;\n\n// 0xB39CD751C2A472A500700039A5207C71DA4D469976368138267EC1535BCA237F\n// 0x0458fBac829b8e330C7f80253389CBdA7Ba369D5","import React, {useEffect, useState} from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nimport {useTranslation} from \"react-i18next\";\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from 'react-bootstrap/Form';\nimport QRCode from 'qrcode.react';\nimport inconeQR from \"../../assets/IconeKeyQR.png\";\n\n\nimport \"./consultation.css\"\nimport Table from \"react-bootstrap/Table\";\n\nfunction Consultation({owner, fileHash}) {\n    const { state: {  contract } } = useEth();\n    const [proofs, setProofs] = useState([]);\n    const [hashOwner, setHashOwner] = useState('');\n    const [showQRCode, setShowQRCode] = useState(false);\n\n    const [editableOwner, setEditableOwner] = useState('');\n    const [editableHash, setEditableHash] = useState([]);\n\n    useEffect( () => {\n        setEditableOwner(owner);\n        setEditableHash(fileHash);\n    }, [owner, fileHash]);\n\n\n    const {t} = useTranslation();\n\n    useEffect(() => {\n        const setProofOfOwnershipList = async () => {\n            try {\n                if (editableOwner.length === 42) {\n                    let result = await contract.methods.getProofOfOwnership(editableOwner).call()\n                    setProofs(result);\n                } else {\n                    console.log('recipient.length= ' + editableOwner.length)\n                }\n            } catch (error) {\n                console.log('error')\n            }\n        };\n        if (contract) {\n            if (editableOwner.length > 0) {\n                setProofOfOwnershipList();\n            }\n        }\n    }, [contract, editableOwner]);\n\n    function handleClic() {\n\n        const setProofOfOwnershipList = async () => {\n            try {\n                if (editableOwner.length === 42) {\n                    let result = await contract.methods.getProofOfOwnership(editableOwner).call()\n                    setProofs(result);\n                } else {\n                    console.log('recipient.length= ' + editableOwner.length)\n                }\n            } catch (error) {\n                console.log('error')\n            }\n        };\n        if (contract) {\n            if (editableOwner.length > 0) {\n                setProofOfOwnershipList();\n            }\n        }\n    }\n\n    function handleClicHash() {\n\n        const setHashOwnerFromPolygon = async () => {\n            try {\n                if (editableHash.length === 64) {\n                    let result = await contract.methods.getOwnerAddress(editableHash).call()\n                    setHashOwner(result)\n\n                    //setProofs(result);\n                } else {\n                    console.log('editableHash.length= ' + editableHash.length)\n                }\n            } catch (error) {\n                console.log('error')\n            }\n        };\n        if (contract) {\n            if (editableHash.length > 0) {\n                setHashOwnerFromPolygon();\n            }\n        }\n    }\n\n    function handleChange(event)\n    {    setEditableOwner( event.target.value);\n    }\n\n    function handleHashChange(event)\n    {    setEditableHash( event.target.value);\n    }\n\n    const downloadQRCode = (event) => {\n        const qrCodeURL = document.getElementById( event.target.id )\n            .toDataURL(\"image/png\")\n            .replace(\"image/png\", \"image/octet-stream\");\n        let aEl = document.createElement(\"a\");\n        aEl.href = qrCodeURL;\n        aEl.download = \"QR_Code_\" + event.target.id + \".png\";\n        document.body.appendChild(aEl);\n        aEl.click();\n        document.body.removeChild(aEl);\n    }\n\n    function toggleShowQRCodes() {\n        setShowQRCode(!showQRCode);\n    }\n    const imgSettings = {\n        src: inconeQR,\n        height:40,\n        width:40\n    }\n    return (\n        <>\n            <Container fluid >\n                <div className=\"consultation-tab\">\n\n                <br/>\n                <Row>\n                    <Col xs={5}><Form.Label htmlFor=\"ownerAddress\">{t(\"ownerConsultation\")}</Form.Label></Col>\n\n\n\n                    <Col>\n                        <Form.Control type=\"text\" id=\"ownerAddress\" onChange={handleChange}\n                                      value={editableOwner}/>\n                        <Form.Text id=\"passwordHelpBlock\" muted>{t(\"inputTextConsultation\")}</Form.Text>\n\n                        </Col>\n                </Row>\n                <br/>\n\n                <Row>\n                    <Col xs={3}></Col>\n                    <Col className=\"consultation-style  justify-content-center\"><Button onClick={handleClic}>{t(\"listConsultation\")}</Button></Col>\n                    <Col></Col>\n                </Row>\n\n                <Row>\n                    <Table>\n                        <thead>\n                        <tr>\n                            {\n                                proofs.length > 0 ? <>\n                                    <th>{t(\"dateTransactionConsultation\")}</th>\n                                    <th>{t(\"hashTransactionConsultation\")}</th>\n                                    <th>{t(\"blockNumberTransactionConsultation\")}</th>\n                                    <th onClick={toggleShowQRCodes}>{\n                                        showQRCode ? t(\"qrcodeConsultation\") : t(\"qrcodeHideConsultation\")\n                                    }</th>\n                                </> : <></>\n                            }\n\n                        </tr>\n                        </thead>\n                        <tbody>\n\n                        {\n                            proofs.map((proof) => (<tr key={proof.blockNumber}>\n                                    <td>\n                                        {new Date(proof.timestamp * 1000).toLocaleString()}\n                                    </td>\n                                    <td>\n                                        {proof.hash}\n                                    </td>\n                                    <td>\n                                        <a href={\"https://polygonscan.com/block/\"+proof.blockNumber}>{proof.blockNumber}</a>\n                                    </td>\n                                    <td hidden={showQRCode}>\n                                        <QRCode\n                                            id={\"qrCodeId\" + proof.blockNumber }\n                                            value={\"https://polygonscan.com/block/\"+proof.blockNumber}\n                                            size={128}\n                                            bgColor={\"#ffffff\"}\n                                            fgColor={\"#000000\"}\n                                            level={\"H\"}\n                                            includeMargin={false}\n                                            onClick={downloadQRCode}\n                                            imageSettings={imgSettings}\n\n                                        />\n                                    </td>\n                                </tr>\n                            ))\n                        }\n\n                        </tbody>\n                    </Table>\n                </Row>\n\n\n                <Row>\n                    <Col xs={5}><Form.Label htmlFor=\"editableFileHash\">{t(\"hashConsultation\")}</Form.Label></Col>\n                    <Col> <Form.Control type=\"text\" id=\"editableFileHash\" onChange={handleHashChange}\n                                        value={editableHash}/>\n                        <Form.Text id=\"passwordHelpBlock\" muted>{t(\"hashInputMsgConsultation\")}</Form.Text></Col>\n                </Row>\n\n                <Row>\n                    <Col xs={3}></Col>\n                    <Col className=\"consultation-style  justify-content-center\"><Button onClick={handleClicHash}>{t(\"getOwnerConsultation\")}</Button></Col>\n                    <Col></Col>\n                </Row>\n\n                    {    // eslint-disable-next-line\n                        hashOwner == 0x0 ? <></> : <><Row>\n                        <Col xs={6}>{t(\"recordedByConsultation\")}</Col>\n                        <Col>{hashOwner}</Col>\n                        </Row></>\n                    }\n\n\n\n                </div>\n\n\n\n            </Container>\n        </>\n    );\n}\n\nexport default Consultation;\n\n","\nimport React, {useState} from \"react\";\n\nimport {useTranslation} from \"react-i18next\";\n\nimport { EthProvider } from \"../../contexts/EthContext\";\n\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Container from \"react-bootstrap/Container\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Encoder from \"./Encoder\";\nimport Consignation from \"./Consignation\";\nimport Consultation from \"./Consultation\";\n\n\nfunction Main() {\n\n    const {t} = useTranslation();\n\n    const [fileHash, setFileHash] = useState(\"\");\n    const [owner, setOwner] = useState(\"\");\n    const setUploadedFileHash = async (childData) => {\n        setFileHash(childData);\n    }\n    const setOwnerInParent = async (childData) => {\n        setOwner(childData);\n    }\n\n    return (<>\n            <Header></Header>\n\n            <Container className=\"body-style\">\n                <Tabs fill defaultActiveKey={1} id=\"uncontrolled-tab-example\">\n\n                    <Tab eventKey={1} title={t(\"encodingMain\")} >\n\n                        <Encoder setUploadedFileHash={setUploadedFileHash}></Encoder>\n\n                    </Tab>\n\n\n                    <Tab eventKey={2} title={t(\"consignationMain\")}  >\n                        <EthProvider>\n\n                        <Consignation fileHash={fileHash} setOwnerInParent={setOwnerInParent} setUploadedFileHash={setUploadedFileHash}></Consignation>\n                    </EthProvider>\n                </Tab>\n                    <Tab eventKey={3} title={t(\"consultationMain\")}>\n                        <EthProvider>\n\n                        <Consultation owner={owner} fileHash={fileHash}></Consultation>\n                        </EthProvider>\n\n                    </Tab>\n\n\n                </Tabs>\n\n\n            </Container>\n\n\n            <Footer></Footer>\n\n\n        </>\n    );\n}\n\nexport default Main;\n\n\n// import React from 'react';\n// import Container from 'react-bootstrap/Container';\n//\n// import Header from \"./Header\";\n//\n// import TransactionRecorder from \"../TransactionRecorder\";\n// import TransactionReader from \"../TransactionReader\";\n// import FileUploader from \"../FileUpload\";\n// import Footer from \"../Footer\";\n// import {useState} from \"react\";\n//\n// function Main() {\n//     const [fileHash, setFileHash] = useState(\"\");\n//     const [proofOfOwnershipList, setProofOfOwnershipList] = useState(\"\");\n//\n//     const setUploadedFileHash = async (childData) => {\n//         setFileHash(childData);\n//     }\n//\n//     const setProofOfOwnershipListMain = async (childData) => {\n//         setProofOfOwnershipList(childData);\n//     }\n//\n//     return (<>\n//             <Header></Header>\n//             <Container>\n//                 <FileUploader setUploadedFileHash={setUploadedFileHash} proofOfOwnershipList={proofOfOwnershipList}/>\n//                 <hr/>\n//                 <TransactionRecorder fileHash={fileHash}/>\n//                 <hr/>\n//                 <TransactionReader setProofOfOwnershipListMain={setProofOfOwnershipListMain}/>\n//                 <hr/>\n//                 <Footer/>\n//             </Container>\n//         </>\n//\n//     );\n// }\n//\n// export default Main;\n","import \"./App.css\";\nimport Main from \"./components/Main\"\n\nfunction App() {\n  return (\n      <div id=\"App\" >\n        <Main></Main>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n// Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// Bootstrap Bundle JS\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./services/i18n\";\n\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}